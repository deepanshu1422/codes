#include <iostream>
#include <vector>
#include <climits>
using namespace std;

int minCostPath(int **input, int m, int n, int i, int j,int **output){
    if(i==m-1 && j==n-1)
        return input[i][j];
    
    if(i>m-1 || j>n-1)
        return INT_MAX;
    if(output[i][j]!=-1)
        return output[i][j];
    
    int x = minCostPath(input,m,n,i+1,j,output);
    int y = minCostPath(input,m,n,i+1,j+1,output);
    int z = minCostPath(input,m,n,i,j+1,output);
    
    int ans = min(x,min(y,z)) + input[i][j];
    output[i][j]=ans;
    return ans;
}

int minCostPath(int **input, int m, int n) {
    int **output = new int*[m];
    for(int i =0;i<n;i++){
        output[i]= new int[n];
    }
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            output[i][j]=-1;
        }
    }
    return minCostPath(input,m,n,0,0,output);
}


int main() {
    int **arr,n,m;
    cin >> n >> m;
    arr = new int*[n];
    for(int i = 0; i < n; i++) {
        arr[i] = new int[m];
    }
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> arr[i][j];
        }
    }
    cout << minCostPath(arr, n, m) << endl;
}
