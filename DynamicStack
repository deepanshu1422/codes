#include<iostream>
using namespace std;
#include<climits>

class StackUsingArray{
   int *data;
   int nextIndex;
   int capacity;

   public:
       StackUsingArray(){
       //StackUsingArray(int totalSize){
            data = new int[4];
           //data = new int[totalSize];
           nextIndex = 0;
           capacity = 4;
           //capacity = totalSize;
       }

       int size(){
           return nextIndex;
       }

       bool isEmpty(){
           /*if(nextIndex==0){
            return true;
           }
           else{
            return false;
           }*/

           return nextIndex==0;
       }

       void push(int element){
           if(nextIndex == capacity){
                int* newData = new int[2*capacity];
                for(int i=0;i<capacity;i++){
                    newData[i]=data[i];
                }
                capacity*=2;
                delete(data);
                data = newData;
           /* cout<<"Stack Full"<<endl;
            return; */
           }
           data[nextIndex]=element;
           nextIndex++;
       }

       int pop(){
           if(isEmpty()){
            cout<<"Stack is empty"<<endl;
            return INT_MIN;
           }
             nextIndex--;
             return data[nextIndex];
       }

       int top(){
           if(isEmpty()){
            cout<<"Stack is empty"<<endl;
            return INT_MIN;
           }
           return data[nextIndex-1];
       }
};


int main(){
    StackUsingArray s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);

    cout<<s.top()<<endl;

    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;

    cout<<s.size()<<endl;

    cout<<s.isEmpty()<<endl;


}
